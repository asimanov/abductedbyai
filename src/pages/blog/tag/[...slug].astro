---
import BaseHead from '../../../components/BaseHead.astro';
import Header from '../../../components/Header.astro';
import Footer from '../../../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../../../consts';
import FormattedDate from '../../../components/FormattedDate.astro';
import { getCollection } from 'astro:content';

export const prerender = true;
const { slug } = Astro.params;
const blogs = await getCollection("blog");
const tags = blogs
  .map((blog) => blog.data.tags)
  .flat()
  .reduce<{ [key: string]: number }>(function (result, c) {
    var count = result[c] || 0;
    result[c] = count + 1;
    return result;
  }, {});
export async function getStaticPaths() {
  const blogs = await getCollection("blog");
  return [...new Set(blogs.map((blog) => blog.data.tags).flat())].map(
    (tag) => ({
      params: { slug: tag },
    }),
  );
}
if (!slug) {
  return Astro.redirect("/404");
}
const allBlogPostsWithTag = await getCollection("blog", (blog) =>
  blog.data.tags.some((tag) => tag === slug),
);
if (allBlogPostsWithTag.length === 0) {
  return Astro.redirect("/404");
}

const posts = (allBlogPostsWithTag).sort(
	(a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
		<style>
			main {
				width: 960px;
			}
			ul {
				display: flex;
				flex-wrap: wrap;
				gap: 16rem;
				list-style-type: none;
				margin: 0;
				padding: 0;
			}
			ul li {
				width: calc(50% - 8rem);
			}
			ul li * {
				text-decoration: none;
				transition: 0.2s ease;
			}
			ul li:first-child {
				width: 100%;
				margin-bottom: 1em;
				text-align: center;
			}
			ul li:first-child img {
				width: 100%;
			}
			ul li:first-child .title {
				font-size: 2.5em;
			}
			ul li img {
				margin-bottom: 0.5em;
				border-radius: 12px;
			}
			ul li a {
				display: block;
				border-bottom: none;
			}
			.title {
				margin: 0;
				color: var(--base-white);
				line-height: 1;
				font-weight: 400;
			}
			.date {
				margin: 0;
				color: var(--base-white-3);
				font-family: var(--set-font-mono);
			}
			ul li a:hover h4,
			ul li a:hover .date {
				color: var(--magenta-brand);
			}
			ul a:hover img {
				box-shadow: var(--box-shadow);
			}
			@media (max-width: 720px) {
				ul {
					gap: 0.5em;
				}
				ul li {
					width: 100%;
					text-align: center;
				}
				ul li:first-child {
					margin-bottom: 0.5em;
				}
				ul li:first-child .title {
					/* font-size: 1.563em; */
				}
			}
		</style>
	</head>
	<body>
		<div class="layout-container">
			<Header />
			<div class="content-container">
				<main>

          <h1>
            All entries about {slug}
          </h1>

					<section>
						<ul>
              {
                posts.map(async (post, i) => {
                  const { remarkPluginFrontmatter } = await post.render();

                  return (
                    <li>
                      <a href={`/blog/${post.slug}/`}>
                        <img width={720} height={360} src={post.data.heroImage} alt="" />
                        <h4 class="title">{post.data.title}</h4>
                        <p class="date">
                          <FormattedDate date={post.data.pubDate} />
                        </p>
                      </a>
                    </li>
                  );
                })
              }
						</ul>
					</section>
				</main>
				<Footer />
			</div>
		</div>
	</body>
</html>